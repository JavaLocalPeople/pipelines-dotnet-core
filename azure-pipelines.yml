# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - group: jack-dev
  - name: buildConfiguration
    value: 'Release'
  - name: AWS_REPO_NAME
    value: $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(AWS_REPO_SUBNAME)
    
steps:

- script: |
    aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com
  displayName: 'Login to AWS'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

# docker build
# docker task Doc: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker?view=azure-devops
- task: Docker@2
  displayName: 'Build the hello-world docker image'
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'

# Deploy image on AWS: https://www.youtube.com/watch?v=zt4T_mLgqAo&ab_channel=cloudopian

# dotnet restore: https://docs.microsoft.com/en-us/azure/devops/pipelines/packages/nuget-restore?view=azure-devops
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'restore'
#     feedsToUse: 'select'
#     vstsFeed: 'my-vsts-feed' # A series of numbers and letters

# dotnet build
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     arguments: '--configuration $(buildConfiguration)'
#   displayName: 'dotnet build $(buildConfiguration)'

# dotnet publish
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True
    
    
    
    
# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
